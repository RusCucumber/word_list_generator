{"version":3,"sources":["actions/index.js","Components/TextField.js","config.js","Components/MarkerField.js","Components/Results.js","Components/App.js","reducers/index.js","index.js"],"names":["inputText","text","console","log","type","payload","TextField","state","handleChange","e","target","value","name","props","history","push","className","action","onChange","this","autoComplete","React","Component","connect","API_URL","API_HEADERS","MarkerField","loading","selected","selectWord","word","index","includes","setState","filter","num","textRenderer","split","map","key","onClick","style","handleSubmit","axios","post","title","body","userId","then","r","data","saveResults","error","handleBack","size","color","result","Results","results","App","path","exact","component","combineReducers","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"2RAAaA,EAAW,SAAAC,GAGvB,OADAC,QAAQC,IAAIF,GACL,CACNG,KAAM,aACNC,QAASJ,ICALK,G,kNACLC,MAAM,CACLP,UAAW,I,EAGZQ,aAAa,SAAAC,GAAI,IAAD,EACOA,EAAEC,OAAjBC,EADQ,EACRA,MADQ,EACDC,KACd,EAAKC,MAAMb,UAAUW,GACrB,EAAKE,MAAMC,QAAQC,KAAK,Y,uDAGxB,OACC,yBAAKC,UAAU,sBACd,yBAAKA,UAAU,eACd,8DACA,gRACA,qHAED,0BAAMC,OAAO,GAAGD,UAAU,iBACzB,2BACCZ,KAAK,OACLQ,KAAK,YACLI,UAAU,eACVE,SAAUC,KAAKX,aACfY,aAAa,c,GAxBKC,IAAMC,YAmCfC,eAJQ,SAAChB,GACvB,MAAO,CAACP,UAAWO,EAAMP,aAGc,CAACA,aAA1BuB,CAAsCjB,G,QCxCxCkB,EAAU,6CACVC,EAAc,CAC1B,eAAgB,mC,kCCMXC,E,4MACLnB,MAAO,CACNoB,SAAS,EACTC,SAAU,GACV5B,a,EAYD6B,WAAY,SAACC,EAAMC,GACf,EAAKxB,MAAMqB,SAASI,SAASD,GAC/B,EAAKE,SAAS,CACbL,SAAU,EAAKrB,MAAMqB,SAASM,QAAO,SAAAC,GAAG,OAAIA,IAAQJ,OAGrD,EAAKE,SAAS,CACbL,SAAS,GAAD,mBAAM,EAAKrB,MAAMqB,UAAjB,CAA2BG,O,EAItCK,aAAe,WAEd,OADkB,EAAKvB,MAAMb,UAAUqC,MAAM,KAElCC,KAAI,SAACR,EAAKC,GACnB,OACC,0BACCf,UAAU,cACVuB,IAAKR,EACLS,QAAS,kBAAI,EAAKX,WAAWC,EAAKC,IAClCU,MAAO,EAAKlC,MAAMqB,SAASI,SAASD,GAAS,CAAC,WAAa,UAAW,MAAS,WAAW,CAAC,WAAc,SACxGD,EALF,S,EAUJY,aAAa,SAAAjC,GACZP,QAAQC,IAAI,EAAKI,MAAMqB,UACvB,EAAKK,SAAS,CACbN,SAAQ,IAETgB,IAAMC,KAAKpB,EAAS,CAChBqB,MAAO,MACPC,KAAM,MACNC,OAAQ,GACPtB,GACJuB,MAAK,SAAAC,GACL/C,QAAQC,IAAI8C,EAAEC,MACd,EAAKjB,SAAS,CACbN,SAAQ,IAET,EAAKd,MAAMsC,YAAYF,EAAEC,SACvB,SAAAE,GAAQlD,QAAQC,IAAIiD,MACtBJ,MAAK,WACL,EAAKnC,MAAMC,QAAQC,KAAK,gB,EAI1BsC,WAAW,WACV,EAAKxC,MAAMC,QAAQC,KAAK,M,kEA1DG,KAAxBI,KAAKN,MAAMb,UACbmB,KAAKN,MAAMC,QAAQC,KAAK,MAExBI,KAAKc,SAAS,CACbjC,UAAUmB,KAAKN,MAAMb,YAEtBE,QAAQC,IAAIgB,KAAKN,U,+BAuDlB,OACCM,KAAKZ,MAAMoB,QACX,kBAAC,IAAD,CACC2B,KAAM,IACDC,MAAO,UACP5B,QAASR,KAAKZ,MAAMoB,UAG1B,yBAAKX,UAAU,kBACd,yBAAKA,UAAU,gBACd,yBAAKA,UAAU,oBAAmB,0BAAMA,UAAU,YAAYwB,QAASrB,KAAKkC,YAA1C,sBAClC,yBAAKrC,UAAU,sBAAqB,0BAAMA,UAAU,mBAAmBwB,QAASrB,KAAKuB,cAAjD,qBAErC,yBAAK1B,UAAU,sBACdG,KAAKiB,qB,GAlFgBf,IAAMC,WA6FjBC,eALS,SAAChB,GACxB,MAAO,CAACP,UAAWO,EAAMP,aAIc,CAACmD,YH7Fd,SAAAK,GAE1B,OADAtD,QAAQC,IAAI,8BACN,CACLC,KAAM,eACNC,QAAQmD,KGyFKjC,CAAwCG,GCjGjD+B,E,4MACLlD,MAAO,CACNsC,MAAM,GACNC,KAAK,I,kEAGmB,OAArB3B,KAAKN,MAAM6C,QACbvC,KAAKN,MAAMC,QAAQC,KAAK,MAExBb,QAAQC,IAAIgB,KAAKN,MAAM6C,SACvBvC,KAAKc,SAAS,CACbY,MAAM1B,KAAKN,MAAM6C,QAAQb,MACzBC,KAAK3B,KAAKN,MAAM6C,QAAQZ,U,+BAK1B,OACC,6BACC,4BAAK3B,KAAKZ,MAAMsC,OAChB,2BAAI1B,KAAKZ,MAAMuC,W,GApBGzB,IAAMC,WA+BbC,eALS,SAAChB,GACxB,MAAO,CAACmD,QAASnD,EAAMmD,WAIgB,KAAzBnC,CAA+BkC,GCb/BE,EAfJ,WACV,OACC,6BACC,kBAAC,IAAD,KACC,yBAAK3C,UAAU,gBACd,kBAAC,IAAD,CAAO4C,KAAK,IAAIC,OAAK,EAACC,UAAWxD,IACjC,kBAAC,IAAD,CAAOsD,KAAK,UAAUC,OAAK,EAACC,UAAWpC,IACvC,kBAAC,IAAD,CAAOkC,KAAK,WAAWC,OAAK,EAACC,UAAWL,Q,gBCU9BM,cAAgB,CAC9B/D,UAvBmB,WAA0B,IAAzBA,EAAwB,uDAAd,GAAIiB,EAAU,uCAC5C,OAAOA,EAAOb,MACb,IAAK,aACJ,OAAOa,EAAOZ,QACf,QACC,OAAOL,IAmBT0D,QAdqB,WAA0B,IAAzBA,EAAwB,uDAAf,KAAMzC,EAAS,uCAC9C,OAAOA,EAAOb,MACb,IAAK,eACJ,OAAOa,EAAOZ,QACf,QACC,OAAOqD,MCTJM,EAAQC,YAAYC,GAE1BC,IAASC,OACR,kBAAC,IAAD,CAAUJ,MAAOA,GAChB,kBAAC,EAAD,OACYK,SAASC,eAAe,W","file":"js/main.d2182804.chunk.js","sourcesContent":["export const inputText =text=>{\r\n\t//Return an action\r\n\tconsole.log(text)\r\n\treturn {\r\n\t\ttype: 'INPUT_TEXT',\r\n\t\tpayload: text\r\n\t}\r\n}\r\nexport const saveResults = result =>{\r\n\tconsole.log(\"Saving results to store...\")\r\n\treturn{\r\n\t\ttype: 'SAVE_RESULTS',\r\n\t\tpayload:result\r\n\t}\r\n}\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {inputText} from '../actions'\r\nimport {withRouter} from 'react-router'\r\nimport \"./App.css\"\r\nclass TextField extends React.Component{\r\n\tstate={\r\n\t\tinputText: \"\",\r\n\t}\r\n\r\n\thandleChange=e=>{\r\n\t\tconst {value, name} = e.target\r\n\t\tthis.props.inputText(value)\r\n\t\tthis.props.history.push('/marker')\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"textFieldContainer\">\r\n\t\t\t\t<div className=\"description\">\r\n\t\t\t\t\t<h1>稲葉の白兎</h1>\r\n\t\t\t\t\t<h1>翻訳したい単語を文章の中から選択し送信すると、このツールが単語帳にしてくれるよ！</h1>\r\n\t\t\t\t\t<h1>まずはこのに文章をコピペして</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form action=\"\" className=\"ui inputField\">\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"inputText\"\r\n\t\t\t\t\t\tclassName=\"inputTextBox\"\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nconst mapStateToProps =(state)=>{\r\n\treturn {inputText: state.inputText}\r\n}\r\n\r\nexport default connect(mapStateToProps, {inputText})(TextField)","export const API_URL = \"https://jsonplaceholder.typicode.com/posts\"\r\nexport const API_HEADERS = {\r\n\t\"Content-type\": \"application/json; charset=UTF-8\"\r\n}","import React from 'react'\r\nimport \"./App.css\"\r\nimport {connect} from 'react-redux'\r\nimport {inputText, saveResults} from '../actions'\r\nimport {withRouter} from 'react-router'\r\nimport {API_URL, API_HEADERS} from \"../config\"\r\nimport axios from 'axios'\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\"\r\nclass MarkerField extends React.Component{\r\n\tstate ={\r\n\t\tloading: false,\r\n\t\tselected: [],\r\n\t\tinputText\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tif(this.props.inputText ===\"\"){\r\n\t\t\tthis.props.history.push('/')\r\n\t\t}else{\r\n\t\t\tthis.setState({\r\n\t\t\t\tinputText:this.props.inputText\r\n\t\t\t})\r\n\t\t\tconsole.log(this.props)\r\n\t\t}\r\n\t}\r\n\tselectWord =(word, index)=>{\r\n\t\tif(this.state.selected.includes(index)){\r\n\t\t\tthis.setState({\r\n\t\t\t\tselected: this.state.selected.filter(num => num !== index)\r\n\t\t\t})\r\n\t\t}else{\r\n\t\t\tthis.setState({\r\n\t\t\t\tselected: [...this.state.selected, index]\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\ttextRenderer = () =>{\r\n\t\tconst textArray = this.props.inputText.split(\" \")\r\n\t\treturn(\r\n\t\t\ttextArray.map((word,index)=>{\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<span \r\n\t\t\t\t\t\tclassName=\"wordWrapper\"\r\n\t\t\t\t\t\tkey={index} \r\n\t\t\t\t\t\tonClick={()=>this.selectWord(word,index)}\r\n\t\t\t\t\t\tstyle={this.state.selected.includes(index) ? {\"background\":\"#028090\", \"color\": \"#E4FDE1\"}:{\"background\": \"none\"}}\r\n\t\t\t\t\t>{word} </span>\r\n\t\t\t\t)\r\n\t\t\t})\r\n\t\t)\r\n\t}\r\n\thandleSubmit=e=>{\r\n\t\tconsole.log(this.state.selected)\r\n\t\tthis.setState({\r\n\t\t\tloading:true\r\n\t\t})\r\n\t\taxios.post(API_URL, {\r\n      title: 'foo',\r\n      body: 'bar',\r\n      userId: 1\r\n    }, API_HEADERS)\r\n\t\t.then(r=>{\r\n\t\t\tconsole.log(r.data)\r\n\t\t\tthis.setState({\r\n\t\t\t\tloading:false\r\n\t\t\t})\r\n\t\t\tthis.props.saveResults(r.data)\r\n\t\t}, error=>{console.log(error)})\r\n\t\t.then(()=>{\r\n\t\t\tthis.props.history.push('/results')\r\n\t\t})\r\n\t}\r\n\r\n\thandleBack=()=>{\r\n\t\tthis.props.history.push('/')\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\tthis.state.loading? \r\n\t\t\t<ScaleLoader \r\n\t\t\t\tsize={150}\r\n     \t \t\tcolor={\"#F45B69\"}\r\n      \t\t\tloading={this.state.loading}\r\n          \t/> \r\n          \t:\r\n\t\t\t<div className=\"ui markerField\" >\r\n\t\t\t\t<div className=\"submitMarker\">\r\n\t\t\t\t\t<div className=\"backBtnContainer\"><span className=\"goBackBtn\" onClick={this.handleBack}>🡄 BACK</span></div>\r\n\t\t\t\t\t<div className=\"submitBtnContainer\"><span className=\"submitMarkerText\" onClick={this.handleSubmit}>GO 🡆</span></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ui markerFieldText\">\r\n\t\t\t\t{this.textRenderer()}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nconst mapStateToProps = (state) =>{\r\n\treturn {inputText: state.inputText}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {saveResults})(MarkerField)","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {withRouter} from 'react-router'\r\n\r\nclass Results extends React.Component{\r\n\tstate ={\r\n\t\ttitle:\"\",\r\n\t\tbody:\"\"\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tif(this.props.results===null){\r\n\t\t\tthis.props.history.push('/')\r\n\t\t}else{\r\n\t\t\tconsole.log(this.props.results)\r\n\t\t\tthis.setState({\r\n\t\t\t\ttitle:this.props.results.title,\r\n\t\t\t\tbody:this.props.results.body,\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<h1>{this.state.title}</h1>\r\n\t\t\t\t<p>{this.state.body}</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn {results: state.results}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Results)","import React from 'react'\r\nimport {HashRouter, Route} from 'react-router-dom'\r\nimport TextField from './TextField'\r\nimport MarkerField from './MarkerField'\r\nimport Results from './Results'\r\nimport  \"./App.css\"\r\n\r\nconst App =()=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<HashRouter>\r\n\t\t\t\t<div className=\"appContainer\">\r\n\t\t\t\t\t<Route path=\"/\" exact component={TextField}/>\r\n\t\t\t\t\t<Route path=\"/marker\" exact component={MarkerField}/>\r\n\t\t\t\t\t<Route path=\"/results\" exact component={Results}/>\r\n\t\t\t\t</div>\r\n\t\t\t</HashRouter>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default App","import { combineReducers } from 'redux' \r\n\r\nconst textReducer = (inputText=\"\", action) =>{\r\n\tswitch(action.type){\r\n\t\tcase \"INPUT_TEXT\":\r\n\t\t\treturn action.payload\r\n\t\tdefault:\r\n\t\t\treturn inputText\r\n\t}\r\n}\r\n\r\n\r\nconst resultsReducer =(results =null, action)=>{\r\n\tswitch(action.type){\r\n\t\tcase 'SAVE_RESULTS':\r\n\t\t\treturn action.payload\r\n\t\tdefault:\r\n\t\t\treturn results\r\n\t}\r\n}\r\n\r\n\r\n//creates Store states? \r\n//For example, state.songs = [list of song objects]\r\nexport default combineReducers({\r\n\tinputText: textReducer,\r\n\tresults: resultsReducer\r\n})","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './Components/App'\r\nimport \"./index.css\"\r\nimport { Provider } from 'react-redux'\r\nimport { createStore} from 'redux'\r\nimport reducers from './reducers'\r\n\r\nconst store = createStore(reducers)\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<App/>\r\n\t</Provider>, document.getElementById(\"root\"))"],"sourceRoot":""}